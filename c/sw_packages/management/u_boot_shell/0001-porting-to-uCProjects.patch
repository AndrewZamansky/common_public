From ad899fe5f8540f40eddddcf54438d889fe831a41 Mon Sep 17 00:00:00 2001
From: AndrewZamansky <stimpy1@gmail.com>
Date: Mon, 27 Jun 2016 09:16:02 +0300
Subject: [PATCH] porting to uCProjects

---
 common/cli_simple.c                     |  1 +
 common/command.c                        |  2 +-
 include/command.h                       |  2 +-
 include/common.h                        |  8 ++++++++
 include/libfdt.h                        |  2 +-
 include/pci.h                           | 10 +++++-----
 include/stdlib.h                        | 12 ------------
 include/stdlib_not_used_in_uCProjects.h | 12 ++++++++++++
 8 files changed, 29 insertions(+), 20 deletions(-)
 delete mode 100644 include/stdlib.h
 create mode 100644 include/stdlib_not_used_in_uCProjects.h

diff --git a/common/cli_simple.c b/common/cli_simple.c
index d8b40c9..0f3b090 100644
--- a/common/cli_simple.c
+++ b/common/cli_simple.c
@@ -13,6 +13,7 @@
 #include <bootretry.h>
 #include <cli.h>
 #include <linux/ctype.h>
+#include <command.h>// az
 
 #define DEBUG_PARSER	0	/* set to 1 to debug */
 
diff --git a/common/command.c b/common/command.c
index 972ae28..a803640 100644
--- a/common/command.c
+++ b/common/command.c
@@ -497,7 +497,7 @@ static int cmd_call(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 }
 
 enum command_ret_t cmd_process(int flag, int argc, char * const argv[],
-			       int *repeatable, ulong *ticks)
+			       int *repeatable, unsigned long *ticks)
 {
 	enum command_ret_t rc = CMD_RET_SUCCESS;
 	cmd_tbl_t *cmdtp;
diff --git a/include/command.h b/include/command.h
index 6c04cd9..c4a8302 100644
--- a/include/command.h
+++ b/include/command.h
@@ -139,7 +139,7 @@ enum command_ret_t {
  *			number of ticks the command took to complete.
  * @return 0 if the command succeeded, 1 if it failed
  */
-int cmd_process(int flag, int argc, char * const argv[],
+enum command_ret_t cmd_process(int flag, int argc, char * const argv[],
 			       int *repeatable, unsigned long *ticks);
 
 #endif	/* __ASSEMBLY__ */
diff --git a/include/common.h b/include/common.h
index 68b24d0..8d52b18 100644
--- a/include/common.h
+++ b/include/common.h
@@ -15,7 +15,11 @@ typedef volatile unsigned long	vu_long;
 typedef volatile unsigned short vu_short;
 typedef volatile unsigned char	vu_char;
 
+
 #include <config.h>
+
+#ifndef DONT_USE_STD_IO  // az
+
 #include <asm-offsets.h>
 #include <linux/bitops.h>
 #include <linux/types.h>
@@ -869,6 +873,8 @@ int confirm_yesno(void);        /*  1 if input is "y", "Y", "yes" or "YES" */
 int	serial_printf (const char *fmt, ...)
 		__attribute__ ((format (__printf__, 1, 2)));
 /* stdin */
+
+
 int	getc(void);
 int	tstc(void);
 
@@ -947,6 +953,8 @@ int cpu_disable(int nr);
 int cpu_release(int nr, int argc, char * const argv[]);
 #endif
 
+#endif  /*  DONT_USE_STD_IO  */
+
 #endif /* __ASSEMBLY__ */
 
 #ifdef CONFIG_PPC
diff --git a/include/libfdt.h b/include/libfdt.h
index e48c21a..013290f 100644
--- a/include/libfdt.h
+++ b/include/libfdt.h
@@ -1666,7 +1666,7 @@ const char *fdt_strerror(int errval);
  *	-FDT_ERR_NOSPACE, out of space, which should not happen unless there
  *		is something very wrong with the device tree input
  */
-int fdt_remove_unused_strings(const void *old, void *new);
+int fdt_remove_unused_strings(const void *old, void *newString);//az : new is reserved word
 
 struct fdt_region {
 	int offset;
diff --git a/include/pci.h b/include/pci.h
index e24c970..20a82b5 100644
--- a/include/pci.h
+++ b/include/pci.h
@@ -508,7 +508,7 @@ typedef int pci_dev_t;
 struct pci_device_id {
 	unsigned int vendor, device;	/* Vendor and device ID or PCI_ANY_ID */
 	unsigned int subvendor, subdevice; /* Subsystem ID's or PCI_ANY_ID */
-	unsigned int class, class_mask;	/* (class,subclass,prog-if) triplet */
+	unsigned int pci_class, class_mask;	/* (class,subclass,prog-if) triplet */ // az : class is reserved name
 	unsigned long driver_data;	/* Data private to the driver */
 };
 
@@ -516,7 +516,7 @@ struct pci_controller;
 
 struct pci_config_table {
 	unsigned int vendor, device;		/* Vendor and device ID or PCI_ANY_ID */
-	unsigned int class;			/* Class ID, or  PCI_ANY_ID */
+	unsigned int pci_class;			/* Class ID, or  PCI_ANY_ID */  // az : class is reserved name
 	unsigned int bus;			/* Bus number, or PCI_ANY_ID */
 	unsigned int dev;			/* Device number, or PCI_ANY_ID */
 	unsigned int func;			/* Function number, or PCI_ANY_ID */
@@ -735,10 +735,10 @@ int pci_hose_find_ext_capability(struct pci_controller *hose,
 extern void board_pci_fixup_dev(struct pci_controller *hose, pci_dev_t dev,
 				unsigned short vendor,
 				unsigned short device,
-				unsigned short class);
+				unsigned short pci_class);  // az : class is reserved name
 #endif
 
-const char * pci_class_str(u8 class);
+const char * pci_class_str(u8 pci_class);// az : class is reserved name
 int pci_last_busno(void);
 
 #ifdef CONFIG_MPC85xx
@@ -783,7 +783,7 @@ pci_dev_t pci_hose_find_devices(struct pci_controller *hose, int busnum,
 				struct pci_device_id *ids, int *indexp);
 
 /* Access sizes for PCI reads and writes */
-enum pci_size_t {
+enum _pci_size_t {// az : test for c++, was ci_size_t
 	PCI_SIZE_8,
 	PCI_SIZE_16,
 	PCI_SIZE_32,
diff --git a/include/stdlib.h b/include/stdlib.h
deleted file mode 100644
index 6bc7fbb..0000000
--- a/include/stdlib.h
+++ /dev/null
@@ -1,12 +0,0 @@
-/*
- *  Copyright (C) 2013 Google Inc.
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#ifndef __STDLIB_H_
-#define __STDLIB_H_
-
-#include <malloc.h>
-
-#endif /* __STDLIB_H_ */
diff --git a/include/stdlib_not_used_in_uCProjects.h b/include/stdlib_not_used_in_uCProjects.h
new file mode 100644
index 0000000..6bc7fbb
--- /dev/null
+++ b/include/stdlib_not_used_in_uCProjects.h
@@ -0,0 +1,12 @@
+/*
+ *  Copyright (C) 2013 Google Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __STDLIB_H_
+#define __STDLIB_H_
+
+#include <malloc.h>
+
+#endif /* __STDLIB_H_ */
-- 
2.8.2.windows.1

