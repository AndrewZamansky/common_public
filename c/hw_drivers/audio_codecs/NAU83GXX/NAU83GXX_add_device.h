/* !! DONT PUT HEADER FILE PROTECTIONS IN THIS FILE !! */

#include "NAU83GXX_api.h"
#include "src/NAU83GXX.h"


#ifndef  NAU83GXX_DT_I2C_DEV
	#error "NAU83GXX_DT_I2C_DEV should be defined"
#endif
EXTERN_DECLARATION_TO_STATIC_DEVICE_INST(NAU83GXX_DT_I2C_DEV);
#define _POINTER_TO_I2C_DEV   P_TO_STATIC_DEVICE_INST(NAU83GXX_DT_I2C_DEV)

#ifndef  NAU83GXX_DT_DEV_ADDR
	#error "NAU83GXX_DT_DEV_ADDR should be defined"
#endif

#ifndef  NAU83GXX_DT_CHIP_TYPE
	#error "NAU83GXX_DT_CHIP_TYPE should be defined"
#endif

#ifndef  NAU83GXX_DT_I2S_OUT_LEFT_CHANNEL_DATA_TYPE
	#error "NAU83GXX_DT_I2S_OUT_LEFT_CHANNEL_DATA_TYPE should be defined"
#endif

#ifndef  NAU83GXX_DT_I2S_OUT_RIGHT_CHANNEL_DATA_TYPE
	#error "NAU83GXX_DT_I2S_OUT_RIGHT_CHANNEL_DATA_TYPE should be defined"
#endif

#ifndef  NAU83GXX_DT_I2S_IN_CHANNEL
	#error "NAU83GXX_DT_I2S_IN_CHANNEL should be defined"
#endif

#ifdef NAU83GXX_DT_4ohm_CURRENT_LIMIT_mA
	#ifdef NAU83GXX_DT_8ohm_CURRENT_LIMIT_mA
		#error "only 4ohm or 8ohm current limit can be defined"
	#else
		#define NAU83GXX_DT_8ohm_CURRENT_LIMIT_mA \
				(NAU83GXX_DT_4ohm_CURRENT_LIMIT_mA - 200)
	#endif
#else
	#ifndef NAU83GXX_DT_8ohm_CURRENT_LIMIT_mA
		#define NAU83GXX_DT_8ohm_CURRENT_LIMIT_mA  4200
	#endif
#endif

#if  (7000 < NAU83GXX_DT_8ohm_CURRENT_LIMIT_mA)
	#error "current limit is too high"
#endif

#if  (1000 > NAU83GXX_DT_8ohm_CURRENT_LIMIT_mA)
	#error "current limit is too low"
#endif


#ifdef NAU83GXX_DT_BOOST_TARGET_LIMIT_mV
	#if (12000 <= NAU83GXX_DT_BOOST_TARGET_LIMIT_mV)
		#error "boost limit is too low"
	#endif
#else
	#define NAU83GXX_DT_BOOST_TARGET_LIMIT_mV 11020
#endif

#ifdef NAU83GXX_DT_BOOST_MARGIN_mV
	#if (12000 <= NAU83GXX_DT_BOOST_MARGIN_mV)
		#error "boost margin is too low"
	#endif
#else
	#define NAU83GXX_DT_BOOST_MARGIN_mV 380
#endif


#if (0 != NAU83GXX_DT_ENABLE_RECOVERY)
	#if !defined(NAU83GXX_DT_IRQ_PIN)
		#error "NAU83GXX_DT_IRQ_PIN should be defined for recovery"
	#endif
	EXTERN_DECLARATION_TO_STATIC_DEVICE_INST(NAU83GXX_DT_IRQ_PIN);
	#define _POINTER_TO_IRQ_PIN   P_TO_STATIC_DEVICE_INST(NAU83GXX_DT_IRQ_PIN)
#else
	#pragma message "NAU83GXX_DT_ENABLE_RECOVERY not defined. Auto set it to 0"
	#undef NAU83GXX_DT_ENABLE_RECOVERY
	#define NAU83GXX_DT_ENABLE_RECOVERY 0
	#define _POINTER_TO_IRQ_PIN   NULL
#endif

SET_STATIC_DEV_CONFIG(NAU83GXX) =
{
	_POINTER_TO_I2C_DEV,
	NAU83GXX_DT_BOOST_TARGET_LIMIT_mV,
	NAU83GXX_DT_BOOST_MARGIN_mV,
	NAU83GXX_DT_8ohm_CURRENT_LIMIT_mA,
	NAU83GXX_DT_DEV_ADDR,
	NAU83GXX_DT_CHIP_TYPE,
	NAU83GXX_DT_I2S_IN_CHANNEL,
	NAU83GXX_DT_I2S_OUT_LEFT_CHANNEL_DATA_TYPE,
	NAU83GXX_DT_I2S_OUT_RIGHT_CHANNEL_DATA_TYPE,
	NAU83GXX_DT_ENABLE_RECOVERY,
	_POINTER_TO_IRQ_PIN
};

#include "add_static_dev.h"

#undef  NAU83GXX_DT_I2C_DEV
#undef  _POINTER_TO_I2C_DEV
#undef  NAU83GXX_DT_DEV_ADDR
#undef NAU83GXX_DT_CHIP_TYPE
#undef NAU83GXX_DT_I2S_IN_CHANNEL
#undef NAU83GXX_DT_I2S_OUT_LEFT_CHANNEL_DATA_TYPE
#undef NAU83GXX_DT_I2S_OUT_RIGHT_CHANNEL_DATA_TYPE
#undef NAU83GXX_DT_4ohm_CURRENT_LIMIT_mA
#undef NAU83GXX_DT_8ohm_CURRENT_LIMIT_mA
#undef NAU83GXX_DT_BOOST_TARGET_LIMIT_mV
#undef NAU83GXX_DT_BOOST_MARGIN_mV
#undef NAU83GXX_DT_ENABLE_RECOVERY
#undef NAU83GXX_DT_IRQ_PIN
#undef _POINTER_TO_IRQ_PIN
