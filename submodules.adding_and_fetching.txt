adding submodule
===============
1) create new repo
 repository should be created in currently remote of the remote-tracking branch
 OR in 'origin' remote if  no such remote-tracking branch exists or the HEAD is detached
 OR if none of above in
 $(PATH_TO_COMMON_PUBLIC_LOCATION)/common_public../../AndrewZamansky-external-repo-managers/$(MODULE)_git

 check-in first commit (for example with default readme.md )
 for example if 'origin' is on AndrewZamansky github then submodule will be in
 https://github.com/AndrewZamansky-external-repo-managers/$(MODULE)_git.git

2) (tested with only one remote of common_public pointing to github. TODO check --reference  argument to choose specific remote)
cd $(PATH_TO_COMMON_PUBLIC)/common_public
git submodule add ../../AndrewZamansky-external-repo-managers/$(MODULE)_git $(RELATIVE_PATH_TO_MODULE)/$(MODULE)_git
(e.g.   :   git submodule add ../../AndrewZamansky-external-repo-managers/openssl_git c/sw_packages/net/openssl/openssl_git )


3)
	add following line to new entry in $(PATH_TO_COMMON_PUBLIC)/common_public/.gitmodules  :
	ignore = all


fetching submodules
==================
1) make sure that common_public repository that you want to fetch from, is named "origin" as it is default
   repository that git use for relative pathes. if the desired repository has othe alias/name then
   rename it by following command:
git remote rename $(OLD_REPO_NAME) origin
   if repository doesn't exist add it with name "origin"
git remote add origin $(URL_or_PATH_to_repo)

2) run: git submodule update --init --force --recursive


upgrade copy of common_public to capability to be source for submodules repositories
==================
1) perfom fetching of submodules as described in "fetching submodule" section.
2) cd $(PATH_TO_COMMON_PUBLIC_LOCATION)/common_public
3) create folder ../../AndrewZamansky-external-repo-managers
for each submodule(and ALL of them according to .gitmodules file !!) run:
	a) cd $(PATH_TO_COMMON_PUBLIC_LOCATION)/common_public
	b) clone repository.  (set ORIGIN environmantal variable. in windows we doing it by {for /f %i in ('git --git-dir $(PATH_TO_SUBMODULE_LOCATION)/$(MODULE)_git/.git remote get-url origin') do set "ORIGIN=%i"} ) :

		windows)
			cmd /v:on /c "set "MODULE=$(MODULE)"& for /f %i in ('git --git-dir c/sw_packages/net/$(MODULE)/$(MODULE)_git/.git remote get-url origin') do (set "ORIGIN=%i") & set "NEW_REPO=../../AndrewZamansky-external-repo-managers/!MODULE!_git" & rd /q /s "!NEW_REPO!" &  git clone !ORIGIN! !NEW_REPO!"

		linux)
			MODULE=$(MODULE); ORIGIN=$(git remote get-url origin); NEW_REPO=../../AndrewZamansky-external-repo-managers/$MODULE_git; rm -rf $NEW_REPO; git clone $ORIGIN $NEW_REPO

		example:
			windows)
			cmd /v:on /c "set "MODULE=curl"& for /f %i in ('git --git-dir c/sw_packages/net/$(MODULE)/$(MODULE)_git/.git remote get-url origin') do (set "ORIGIN=%i") & set "NEW_REPO=../../AndrewZamansky-external-repo-managers/!MODULE!_git" & rd /q /s "!NEW_REPO!" &  git clone !ORIGIN! !NEW_REPO!"

			cmd /v:on /c "set "MODULE=openssl"& for /f %i in ('git --git-dir c/sw_packages/net/$(MODULE)/$(MODULE)_git/.git remote get-url origin') do (set "ORIGIN=%i") & set "NEW_REPO=../../AndrewZamansky-external-repo-managers/!MODULE!_git" & rd /q /s "!NEW_REPO!" &  git clone !ORIGIN! !NEW_REPO!"

	c) create local branches according to remote branches:
		windows)
			cmd /v:on /c "set "MODULE=$"& set "NEW_REPO=../../AndrewZamansky-external-repo-managers/!MODULE!_git" & for /f "tokens=2 delims=/ " %i in ('git --git-dir !NEW_REPO!/.git branch -r ^| find /v "origin/HEAD"') do git --git-dir ../../AndrewZamansky-external-repo-managers/!MODULE!_git/.git branch -f %i origin/%i"

		linux)
			for i in `git branch -a | grep remote | grep -v HEAD | grep -v master`; do git branch --track ${i#remotes/origin/} $i; done

		example:
			windows)
		cmd /v:on /c "set "MODULE=curl"& set "NEW_REPO=../../AndrewZamansky-external-repo-managers/!MODULE!_git" & for /f "tokens=2 delims=/ " %i in ('git --git-dir !NEW_REPO!/.git branch -r ^| find /v "origin/HEAD"') do git --git-dir ../../AndrewZamansky-external-repo-managers/!MODULE!_git/.git branch -f %i origin/%i"
