
include $(MAKEFILES_ROOT_DIR)/common.mk

# creating "project_config.h file" :


COMMENT :=file is auto generated by running 'make menuconfig'
ifeq ($(findstring WINDOWS,$(COMPILER_HOST_OS)),WINDOWS) 
    $(shell echo #ifndef  project_config_h> $(PROJECT_CONFIG_H_FILE))
    $(shell echo #define  project_config_h>> $(PROJECT_CONFIG_H_FILE))
    $(shell echo /*$(COMMENT)*/ >> $(PROJECT_CONFIG_H_FILE))
    CONFIG_CONTENT := $(shell findstr /b /c:"CONFIG" .config)
    NEW_PATTERN := echo \#define % >> $(PROJECT_CONFIG_H_FILE) &
else ifeq ($(findstring LINUX,$(COMPILER_HOST_OS)),LINUX) 
    $(shell echo "\#ifndef  project_config_h"> $(PROJECT_CONFIG_H_FILE))
    $(shell echo "\#define  project_config_h">> $(PROJECT_CONFIG_H_FILE))
    $(shell echo /*$(COMMENT)\*/  >> $(PROJECT_CONFIG_H_FILE))
    CONFIG_CONTENT := $(shell cat .config | grep '^CONFIG')
    CONFIG_CONTENT := $(subst ",\",$(CONFIG_CONTENT))
    NEW_PATTERN := echo "\#define %" >> $(PROJECT_CONFIG_H_FILE) ;
endif
CONFIG_CONTENT := $(patsubst %,$(NEW_PATTERN) ,$(CONFIG_CONTENT))

EQUAL_SIGN := =
CONFIG_CONTENT := $(subst $(EQUAL_SIGN)y,$(SPACE)  $(SPACE)1,$(CONFIG_CONTENT))
CONFIG_CONTENT := $(subst $(EQUAL_SIGN),$(SPACE)  $(SPACE),$(CONFIG_CONTENT))
DUMMY:=$(shell $(CONFIG_CONTENT))

ifeq ($(findstring WINDOWS,$(COMPILER_HOST_OS)),WINDOWS) 
    $(shell echo #endif>> $(PROJECT_CONFIG_H_FILE))
else ifeq ($(findstring LINUX,$(COMPILER_HOST_OS)),LINUX) 
    $(shell echo "\#endif">> $(PROJECT_CONFIG_H_FILE))
endif

all :
	$(info auto generated project_config.h created)
